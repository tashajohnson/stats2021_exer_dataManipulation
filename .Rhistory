# keep a list of the packages used in this script
packages <- c("tidyverse","rio","jmv")
# check each of the packages in the list and install them if they're not installed already
for (i in packages){
if(! i %in% installed.packages()){
install.packages(i,dependencies = TRUE)
}
# show each package that is checked
print(i)
}
# load each package into memory so it can be used in the script
for (i in packages){
library(i,character.only=TRUE)
# show each package that is loaded
print(i)
}
# import the Week3.rds dataset into RStudio
# Using the file.choose() command allows you to select a file to import from another folder.
# dataset <- rio::import(file.choose())
# This command will allow us to import the rds file included in our project folder.
dataset <- rio::import("Week3.rds")
dataset <- dataset %>% mutate(bmi = round(weight/(height/100)^2,1))
dataset <- dataset %>% mutate(bmi = round(weight/(height/100)^2,1))
# The line below is how I first reverse coded the variable. It seemed to work, but I later found some problems with the z-scores.
# While the text values in the variable did get changed, the order of the factor levels also got reversed numerically.
# The result was that the number values really didn't change. I left this here to make you aware to check results are what you expect when you modify the variables.
# It's easy to miss a problem like this in your code.
#dataset <- dataset %>% mutate(lvst4reverse = recode(lvst4, "completely"="Not at all", "mostly"="a little", "moderately"="moderately", "a little"="mostly", "Not at all"="completely"))
# The line below correctly reverse coded the lvst4 variable.
dataset <- dataset %>% mutate(lvst4reverse = 6 - as.numeric(lvst4))
dataset <- dataset %>% mutate(LOSS_total = as.numeric(lvst1) + as.numeric(lvst2) + as.numeric(lvst3) + as.numeric(lvst4reverse))
dataset <- dataset %>% mutate(LOSS_total = as.numeric(lvst1) + as.numeric(lvst2) + as.numeric(lvst3) + as.numeric(lvst4reverse))
# Enter code here below the comment.
dataset <- dataset %>% mutate(FOSS_total = as.numeric(frst1) + as.numeric(frst2) + as.numeric(frst3))
dataset <- hist(LOSS_total)
hist(LOSS_total)
hist(dataset$LOSS_total)
hist(dataset$LOSS_total)
hist(dataset$FOSS_total)
dataset <- dataset %>% mutate(LOSS_mean = (as.numeric(lvst1) + as.numeric(lvst2) + as.numeric(lvst3) + as.numeric(lvst4reverse))/4)
dataset <- dataset %>% mutate(FOSS_mean = (as.numeric(frst1) + as.numeric(frst2) + as.numeric(frst3))/3)
dataset <- dataset %>% mutate(LOSS_total_z = scale(LOSS_total))
dataset <- dataset %>% mutate(LOSS_mean_z = scale(LOSS_mean))
dataset <- dataset %>% mutate(FOSS_total_z = scale(FOSS_total))
dataset <- dataset %>% mutate(FOSS_mean_z = scale(FOSS_mean))
dataset <- dataset %>% mutate(LOSS_total_z = scale(LOSS_total))
dataset <- dataset %>% mutate(LOSS_mean_z = scale(LOSS_mean))
dataset <- dataset %>% mutate(FOSS_total_z = scale(FOSS_total))
dataset <- dataset %>% mutate(FOSS_mean_z = scale(FOSS_mean))
rio::export(dataset,"Week4.rds")
